import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.Stream;

public class FindEven {

    public static void main(String[] args) throws InterruptedException {

        long t0 = System.currentTimeMillis();
        System.out.println((t0) + "ms");
        for (int i = 0; i < 3; i++) {

            Stream<Integer> stream = Stream.of(493, 434, 595, 563, 157, 354, 73, 939, 410, 193, 387, 875, 695, 978, 443, 844, 701, 498, 418, 449,
                    551, 695, 613, 444, 12, 941, 468, 609, 644, 120, 888, 935, 75, 977, 766, 425, 38, 731, 879, 838, 63, 917,
                    573, 152, 487, 192, 286, 489, 63, 771, 573, 312, 567, 93, 890, 405, 658, 568, 399, 498, 211, 434, 215, 866,
                    523, 979, 14, 474, 499, 555, 904, 871, 9, 410, 91, 666, 920, 526, 640, 287, 491, 384, 917, 693, 584, 947,
                    814, 528, 430, 624, 682, 691, 877, 422, 323, 446, 479, 850, 798, 481, 421, 3, 923, 431, 452, 99, 201, 812,
                    4, 87, 828, 830, 470, 483, 699, 89, 358, 909, 220, 946, 399, 595, 919, 299, 716, 17, 291, 830, 774, 937,
                    17, 700, 346, 650, 34, 387, 803, 797, 476, 571, 603, 663, 874, 487, 831, 695, 484, 615, 752, 765, 109, 602,
                    91, 863, 603, 812, 988, 512, 100, 187, 174, 965, 978, 895, 2, 750, 40, 816, 768, 3, 189, 919, 345, 274, 57,
                    487, 154, 679, 203, 577, 936, 627, 89, 35, 105, 854, 178, 86, 371, 79, 468, 458, 820, 400, 174, 948, 423,
                    894, 865, 428, 370, 407, 763, 286, 976, 691, 909, 267, 93, 171, 302, 242, 454, 194, 630, 544, 506, 745, 641,
                    734, 282, 578, 326, 393, 748, 675, 822, 712, 467, 800, 835, 925, 840, 528, 769, 152, 989, 472, 5, 89, 444,
                    435, 637, 738, 629, 678, 507, 96, 246, 894, 981, 614, 4, 78, 580, 564, 731, 474, 154, 729, 386, 438, 102,
                    131, 612, 373, 660, 957, 62, 860, 465, 36, 520, 689, 932, 531, 868, 211, 342, 727, 905, 48, 543, 708, 104,
                    697, 47, 752, 95, 860, 604, 647, 527, 668, 309, 485, 154, 284, 306, 717, 339, 93, 137, 201, 493, 422, 92,
                    712, 922, 345, 462, 908, 272, 265, 317, 231, 524, 373, 654, 252, 136, 357, 996, 971, 906, 1000, 67, 570,
                    28, 726, 162, 134, 615, 452, 249, 146, 337, 280, 535, 763, 737, 761, 733, 427, 149, 706, 497, 433, 19, 962,
                    887, 803, 941, 121, 376, 335, 778, 328, 869, 617, 110, 942, 144, 240, 592, 271, 245, 858, 755, 73, 403, 676,
                    702, 998, 668, 11, 378, 561, 169, 617, 561, 231, 384, 525, 105, 766, 751, 433, 727, 404, 355, 57, 549, 184,
                    603, 520, 871, 589, 332, 621, 98, 562, 605, 895, 941, 580, 436, 412, 34, 533, 695, 241, 213, 484, 464, 592,
                    24, 357, 850, 68, 789, 884, 79, 954, 550, 426, 806, 939, 153, 332, 401, 800, 512, 13, 463, 143, 317, 987,
                    859, 430, 146, 172, 819, 210, 689, 946, 204, 570, 902, 330, 316, 383, 74, 874, 786, 766, 570, 283, 356, 80,
                    961, 591, 306, 814, 503, 710, 726, 443, 332, 643, 936, 158, 809, 958, 5, 189, 918, 33, 156, 770, 42, 890,
                    666, 106, 688, 580, 158, 483, 904, 449, 569, 252, 875, 741, 63, 421, 230, 859, 87, 542
            );


            System.out.println(filterEvenFromStream(stream));
            long t1 = System.currentTimeMillis();
            System.out.println((t1) + "ms");
        }


        long t2 = System.currentTimeMillis();
        System.out.println((t2-t0) + "ms");
    }

    public static List<Integer> filterEvenFromList(List<Integer> numbers) {
        return numbers.stream().parallel()
                .sorted()
                .filter(n -> n % 2 == 0)
                .collect(Collectors.toList());
    }

    public static List<Integer> filterEvenFromStream(Stream<Integer> stream) {
        return stream.parallel()
                .sorted()
                .filter(n -> n%2 == 0)
                .collect(Collectors.toList());
    }
}
